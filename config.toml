# Codex Configuration
# サブエージェント用の設定

# モデル設定
model = "gpt-5-codex"

# OpenAI Provider設定を上書き
# デフォルトのResponses APIの代わりにChat Completions APIを使用
[model_providers.openai]
base_url = "https://api.openai.com/v1"
env_key = "OPENAI_API_KEY"
name = "OpenAI (Chat Completions API)"
requires_openai_auth = true
wire_api = "chat"

# ==================== セキュリティ ====================
[sandbox]
default_mode = "read-only"

[approval]
policy = "on-request"

# ==================== MCP サーバー ====================
# Codex 自身を MCP サーバーとして使用（サブエージェント用）
[mcp_servers.codex-agent]
args = ["mcp-server"]
command = "codex"
env.CODEX_CONFIG_PATH = "~/.codex/config.toml"
env.RUST_LOG = "info"

# Playwright - ブラウザ自動化・スクレイピング
[mcp_servers.playwright]
args = ["-y", "@playwright/mcp@latest"]
command = "npx"

# MarkItDown - Markdown 変換・ドキュメント処理
[mcp_servers.markitdown]
args = ["markitdown-mcp"]
command = "uvx"

# arXiv - 学術論文検索・ダウンロード
[mcp_servers.arxiv-mcp-server]
args = ["arxiv-mcp-server"]
command = "uvx"

# Context7 - Upstash コンテキスト管理
[mcp_servers.context7]
args = ["-y", "@upstash/context7-mcp"]
command = "npx"

# YouTube - 動画情報取得・トランスクリプト
[mcp_servers.youtube]
args = ["@anaisbetts/mcp-youtube"]
command = "npx"

# Gemini CLI - Google Gemini API 統合
[mcp_servers.gemini-cli]
args = ["mcp-gemini-cli", "--allow-npx"]
command = "npx"

# Codex MCP - 外部からの Codex 呼び出し用
[mcp_servers.codex]
args = ["mcp"]
command = "codex"

# Chrome DevTools - Chrome ブラウザ開発者ツール連携
[mcp_servers.chrome-devtools]
args = ["chrome-devtools-mcp@latest"]
command = "npx"

# ==================== サブエージェント ====================
[subagents]
enabled = true
inherit_model = true
max_parallel = 4
token_budget = 40000
# 🆕 MCP 経由で Codex ツールを使用
use_codex_mcp = true

# ==================== 監査ログ ====================
[audit]
enabled = true
format = "json"
include_mcp_calls = true
include_tool_args = true
log_dir = "~/.codex/audit-logs"
